{"version":3,"sources":["../../src/controller/OrderController.js"],"names":["Order","OrderList","OrderListView","OrderService","Message","MessageView","DateHelper","DataBind","OrderController","$","document","querySelector","bind","_controlsDate","_controlsAmount","_controlsPrice","_orderList","_message","_service","event","preventDefault","order","_createOrder","add","text","_clearForm","import","list","then","orders","forEach","catch","console","log","error","delete","date","dateFromText","value","amount","parseInt","price","parseFloat","focus"],"mappings":";;;;;;;;;;;;;;;AAAQA,iB,eAAAA,K;;AACAC,qB,mBAAAA,S;;AACAC,yB,wBAAAA,a;;AACAC,wB,wBAAAA,Y;;AACAC,mB,iBAAAA,O;;AACAC,uB,oBAAAA,W;;AACAC,sB,qBAAAA,U;;AACAC,oB,mBAAAA,Q;;;;;;;;;;;;;;;;;;;;;uCAEKC,e;AAET,2CAAc;AAAA;;AAEV,wBAAIC,IAAIC,SAASC,aAAT,CAAuBC,IAAvB,CAA4BF,QAA5B,CAAR;;AAEA,yBAAKG,aAAL,GAAqBJ,EAAE,aAAF,CAArB;AACA,yBAAKK,eAAL,GAAuBL,EAAE,eAAF,CAAvB;AACA,yBAAKM,cAAL,GAAsBN,EAAE,cAAF,CAAtB;;AAEA,yBAAKO,UAAL,GAAkB,IAAIT,QAAJ,CACd,IAAIN,SAAJ,EADc,EAEd,IAAIC,aAAJ,CAAkBO,EAAE,gBAAF,CAAlB,CAFc,EAGd,KAHc,EAGP,QAHO,CAAlB;;AAKA,yBAAKQ,QAAL,GAAgB,IAAIV,QAAJ,CACZ,IAAIH,OAAJ,EADY,EAEZ,IAAIC,WAAJ,CAAgBI,EAAE,cAAF,CAAhB,CAFY,EAGZ,MAHY,CAAhB;;AAKA,yBAAKS,QAAL,GAAgB,IAAIf,YAAJ,EAAhB;AACH;;;;wCAEGgB,K,EAAO;;AAEPA,8BAAMC,cAAN;AACA,4BAAIC,QAAQ,KAAKC,YAAL,EAAZ;;AAEA,6BAAKN,UAAL,CAAgBO,GAAhB,CAAoBF,KAApB;AACA,6BAAKJ,QAAL,CAAcO,IAAd,GAAqB,cAArB;AACA,6BAAKC,UAAL;AACH;;;8CAEQ;AAAA;;AAEL,6BAAKP,QAAL,CACKQ,MADL,CACY,KAAKV,UAAL,CAAgBW,IAD5B,EAEKC,IAFL,CAEU,kBAAU;AACZC,mCAAOC,OAAP,CAAe;AAAA,uCAAS,MAAKd,UAAL,CAAgBO,GAAhB,CAAoBF,KAApB,CAAT;AAAA,6BAAf;AACA,kCAAKJ,QAAL,CAAcO,IAAd,GAAqB,kBAArB;AACA,kCAAKC,UAAL;AACH,yBANL,EAOKM,KAPL,CAOW,iBAAS;AACZC,oCAAQC,GAAR,CAAYC,KAAZ;AACA,kCAAKjB,QAAL,CAAcO,IAAd,GAAqB,uBAArB;AACH,yBAVL;AAWH;;;8CAEQ;;AAEL,6BAAKR,UAAL,CAAgBmB,MAAhB;AACA,6BAAKlB,QAAL,CAAcO,IAAd,GAAqB,iBAArB;AACA,6BAAKC,UAAL;AACH;;;mDAEc;;AAEX,4BAAIW,OAAO9B,WAAW+B,YAAX,CAAwB,KAAKxB,aAAL,CAAmByB,KAA3C,CAAX;AACA,4BAAIC,SAASC,SAAS,KAAK1B,eAAL,CAAqBwB,KAA9B,CAAb;AACA,4BAAIG,QAAQC,WAAW,KAAK3B,cAAL,CAAoBuB,KAA/B,CAAZ;;AAEA,+BAAO,IAAItC,KAAJ,CAAUoC,IAAV,EAAgBG,MAAhB,EAAwBE,KAAxB,CAAP;AACH;;;iDAEY;;AAET,6BAAK5B,aAAL,CAAmByB,KAAnB,GAA2B,EAA3B;AACA,6BAAKxB,eAAL,CAAqBwB,KAArB,GAA6B,CAA7B;AACA,6BAAKvB,cAAL,CAAoBuB,KAApB,GAA4B,CAA5B;;AAEA,6BAAKzB,aAAL,CAAmB8B,KAAnB;AACH","file":"OrderController.js","sourcesContent":["import {Order} from '../model/Order';\nimport {OrderList} from '../model/OrderList';\nimport {OrderListView} from '../view/OrderListView.js';\nimport {OrderService} from '../service/OrderService';\nimport {Message} from '../model/Message';\nimport {MessageView} from '../view/MessageView';\nimport {DateHelper} from '../helper/DateHelper';\nimport {DataBind} from '../helper/DataBind';\n\nexport class OrderController {\n\n    constructor() {\n\n        let $ = document.querySelector.bind(document);\n\n        this._controlsDate = $('#order-date');\n        this._controlsAmount = $('#order-amount');\n        this._controlsPrice = $('#order-price');\n\n        this._orderList = new DataBind(\n            new OrderList(),\n            new OrderListView($('#orderListView')),\n            'add', 'delete');\n        \n        this._message = new DataBind(\n            new Message(),\n            new MessageView($('#messageView')),\n            'text');\n        \n        this._service = new OrderService();\n    }\n\n    add(event) {\n        \n        event.preventDefault();\n        let order = this._createOrder();\n\n        this._orderList.add(order);\n        this._message.text = 'Order added.';\n        this._clearForm();\n    }\n\n    import() {\n\n        this._service\n            .import(this._orderList.list)\n            .then(orders => {\n                orders.forEach(order => this._orderList.add(order))\n                this._message.text = 'Orders imported.';\n                this._clearForm();\n            })\n            .catch(error => {\n                console.log(error);\n                this._message.text = 'Cannot import orders.'\n            });\n    }\n\n    delete() {\n\n        this._orderList.delete();\n        this._message.text = 'Orders deleted.';\n        this._clearForm();\n    }\n\n    _createOrder() {\n\n        let date = DateHelper.dateFromText(this._controlsDate.value);\n        let amount = parseInt(this._controlsAmount.value);\n        let price = parseFloat(this._controlsPrice.value)\n        \n        return new Order(date, amount, price);\n    }\n\n    _clearForm() {\n\n        this._controlsDate.value = '';\n        this._controlsAmount.value = 1;\n        this._controlsPrice.value = 0;\n\n        this._controlsDate.focus();\n    }\n}"]}