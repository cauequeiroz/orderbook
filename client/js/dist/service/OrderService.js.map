{"version":3,"sources":["../../src/service/OrderService.js"],"names":["HttpService","Order","OrderService","_http","currentOrders","getAllOrders","then","orders","filter","some","order","equals","current","catch","Error","error","Promise","all","getWeekOrders","getLastWeekOrders","getOrdersFromTwoWeeksAgo","response","reduce","acc","concat","get","map","Date","data","quantidade","valor"],"mappings":";;;;;;;;;;;;;;;AAAQA,uB,gBAAAA,W;;AACAC,iB,eAAAA,K;;;;;;;;;;;;;;;;;;;;;oCAEKC,Y;AAET,wCAAc;AAAA;;AAEV,yBAAKC,KAAL,GAAa,IAAIH,WAAJ,EAAb;AACH;;;;4CAEMI,a,EAAe;;AAElB,+BAAO,KAAKC,YAAL,GACFC,IADE,CACG;AAAA,mCACFC,OAAOC,MAAP,CAAc;AAAA,uCACV,CAACJ,cAAcK,IAAd,CAAmB;AAAA,2CAAWC,MAAMC,MAAN,CAAaC,OAAb,CAAX;AAAA,iCAAnB,CADS;AAAA,6BAAd,CADE;AAAA,yBADH,EAIFC,KAJE,CAII,iBAAS;AACZ,kCAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,yBANE,CAAP;AAOH;;;mDAEc;;AAEX,+BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKC,aAAL,EADe,EAEf,KAAKC,iBAAL,EAFe,EAGf,KAAKC,wBAAL,EAHe,CAAZ,EAKNd,IALM,CAKD;AAAA,mCACFe,SAASC,MAAT,CAAgB,UAACC,GAAD,EAAMX,OAAN;AAAA,uCAAkBW,IAAIC,MAAJ,CAAWZ,OAAX,CAAlB;AAAA,6BAAhB,EAAuD,EAAvD,CADE;AAAA,yBALC,EAONC,KAPM,CAOA,iBAAS;AACZ,kCAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,yBATM,CAAP;AAUH;;;oDAEe;;AAEZ,+BAAO,KAAKZ,KAAL,CACFsB,GADE,CACE,oBADF,EAEFnB,IAFE,CAEG;AAAA,mCAAUC,OAAOmB,GAAP,CAAW;AAAA,uCACvB,IAAIzB,KAAJ,CAAU,IAAI0B,IAAJ,CAASjB,MAAMkB,IAAf,CAAV,EAAgClB,MAAMmB,UAAtC,EAAkDnB,MAAMoB,KAAxD,CADuB;AAAA,6BAAX,CAAV;AAAA,yBAFH,EAIFjB,KAJE,CAII,iBAAS;AACZ,kCAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,yBANE,CAAP;AAOH;;;wDAEmB;;AAEhB,+BAAO,KAAKZ,KAAL,CACFsB,GADE,CACE,sBADF,EAEFnB,IAFE,CAEG;AAAA,mCAAUC,OAAOmB,GAAP,CAAW;AAAA,uCACvB,IAAIzB,KAAJ,CAAU,IAAI0B,IAAJ,CAASjB,MAAMkB,IAAf,CAAV,EAAgClB,MAAMmB,UAAtC,EAAkDnB,MAAMoB,KAAxD,CADuB;AAAA,6BAAX,CAAV;AAAA,yBAFH,EAIFjB,KAJE,CAII,iBAAS;AACZ,kCAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,yBANE,CAAP;AAOH;;;+DAE0B;;AAEvB,+BAAO,KAAKZ,KAAL,CACFsB,GADE,CACE,uBADF,EAEFnB,IAFE,CAEG;AAAA,mCAAUC,OAAOmB,GAAP,CAAW;AAAA,uCACvB,IAAIzB,KAAJ,CAAU,IAAI0B,IAAJ,CAASjB,MAAMkB,IAAf,CAAV,EAAgClB,MAAMmB,UAAtC,EAAkDnB,MAAMoB,KAAxD,CADuB;AAAA,6BAAX,CAAV;AAAA,yBAFH,EAIFjB,KAJE,CAII,iBAAS;AACZ,kCAAM,IAAIC,KAAJ,CAAUC,KAAV,CAAN;AACH,yBANE,CAAP;AAOH","file":"OrderService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {Order} from '../model/Order';\n\nexport class OrderService {\n\n    constructor() {\n\n        this._http = new HttpService();\n    }\n\n    import(currentOrders) {\n\n        return this.getAllOrders()                        \n            .then(orders =>\n                orders.filter(order =>\n                    !currentOrders.some(current => order.equals(current))))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n\n    getAllOrders() {\n\n        return Promise.all([\n            this.getWeekOrders(),\n            this.getLastWeekOrders(),\n            this.getOrdersFromTwoWeeksAgo()\n        ])\n        .then(response =>\n            response.reduce((acc, current) => acc.concat(current), []))\n        .catch(error => {\n            throw new Error(error);\n        });\n    }\n\n    getWeekOrders() {\n\n        return this._http\n            .get('negociacoes/semana')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.data), order.quantidade, order.valor)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n\n    getLastWeekOrders() {\n\n        return this._http\n            .get('negociacoes/anterior')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.data), order.quantidade, order.valor)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n\n    getOrdersFromTwoWeeksAgo() {\n\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(orders => orders.map(order =>                \n                new Order(new Date(order.data), order.quantidade, order.valor)))\n            .catch(error => {\n                throw new Error(error);\n            });\n    }\n}"]}